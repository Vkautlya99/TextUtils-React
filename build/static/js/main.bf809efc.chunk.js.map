{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","className","role","alert","type","data-bs-dismiss","aria-label","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","background","rows","newText","toUpperCase","toLowerCase","split","join","length","App","setmode","document","body","backgroundColor","showAlert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.bf809efc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert}</strong>\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-1 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n             <form className=\"d-flex\" role=\"search\">\r\n              {/* <input\r\n                className=\"form-cntrl me-1\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              /> */}\r\n              {/* <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button> */}\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                   <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                   <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n  title : PropTypes.string,\r\n  aboutText : PropTypes.string\r\n}\r\n\r\n\r\n// Setting Default Props\r\n// Navbar.defaultProps={\r\n//   title : \"My-Title\",\r\n//   aboutText : \"AboutWeb\"\r\n// };\r\n\r\n\r\n","\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst Upcaseclick =()=>{\r\n    // console.log(text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n}\r\n\r\n const Locaseclick =()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n }\r\n\r\n const doClear =()=>{\r\n    let newText = \"\"\r\n    setText(newText)\r\n }\r\n\r\n const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n}\r\nconst OnChange =(event)=>{\r\n    console.log(\"\")\r\n    setText(event.target.value)\r\n}\r\n    // Text is a variable and setText is used for array destuctring\r\n    const [text ,setText] = useState(\"\")      //State Variable\r\n    // text = (\"new text\")  //Wrong way to change the state\r\n    // setText = (\"New Text\")  //Correct way to change the state\r\n\r\n    return (\r\n    <>\r\n    <div className='container' style={{color:\"dark\"?\"light\":'black'}}>\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value= {text} onChange={OnChange} style={{background:\"dark\"?\"light\":'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={Upcaseclick}>Convert in Uppercase</button>\r\n        <button className=\"btn btn-warning mx-1\" onClick={Locaseclick}>Convert in Lowercase</button>\r\n        <button className=\"btn btn-success mx-1\" onClick={doClear}>Clear-All</button>\r\n        <button className=\"btn btn-dark mx-1\" onClick={handleExtraSpaces}>Remove-Spaces</button>\r\n  \r\n        \r\n    </div>\r\n    <div className=\"container my-4\" style={{background:\"light\"?\"dark\":'light'}}>\r\n          <h1>Your Text Summary</h1>\r\n          <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n          <p>in {0.008 *text.split(\" \").length} You can Read</p><br />\r\n\r\n          <h2>Preview</h2>\r\n          <h6>{text.length>0?text:\"Enter Something in the box to Preview here\"}</h6>\r\n\r\n\r\n    </div>\r\n    </>\r\n       \r\n  )\r\n}\r\n\r\n","import {useState} from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from './components/Navbar' ;\nimport TextForm from './components/TextForm' ;\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   useParams\n// } from 'react-router-dom'\n\nfunction App(){\n  const [mode, setmode] = useState('light')    //whether dark mode is enabled or not \n  // const[alert, setalert] = useState(null)\n\n  const toggleMode = () => {\n    if (mode === 'dark') {\n        setmode('light')\n        document.body.style.backgroundColor = \"yellow\"\n        document.title = \"V-Cng Light Mode\"\n    }\n    else {\n        setmode('dark')\n        document.body.style.backgroundColor = \"pink\"\n        document.title = \"V-Cng Dark Mode\"\n\n    }\n}\n    \n\n  return (\n    <>\n    <div>\n      \n    {/* <Router> */}\n      <Navbar title=\"V-Write\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert=\"This is alert\"/>\n      <TextForm showAlert={alert} heading=\"Enter the text analyze below\" mode={mode}></TextForm>\n      <div className=\"container my-3\">\n        {/* <Switch>\n             <Route path=\"About\">\n                <About />\n              </Route>\n             <Route path=\"/\">\n             </Route>\n             \n          </Switch> */}\n          </div>\n        {/* </Router> */}\n\n      {/* <About/> */}\n      </div>\n\n      \n\n    {/* </div> */}\n    // </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}